{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fmodern\fcharset0 CourierNewPSMT;}
{\colortbl;\red255\green255\blue255;}
\vieww15760\viewh12380\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs24 \cf0 PT0 button to cycle\
pin 1 to ground\
pin2 to power\
pin3 to potentiometer, brightness setting\
\
busy never set in I/O sim.\
\
Sending Data to the LCD -->\
	- In log, will send complaint that software init to 1 line, but hardware 2 line, ignore\
	- break point after LCD_Open to test\
	- E, RS, Data\
	- Sending Command (CMD), RS = 0, sending char, RS = 1\
	- E bit toggled on and off for both CMD and Char, won't read as data or command until it sees E bit toggle 		down\
	- OutCsrNibble:\
		- E bit low, bottom 4 bits of RegA bits you want but LCD reads top 4 bits (PTH 7-4)\
		- shift A left 4 times\
		- staa PTH\
		- turn E bit on and off (flip E bit)\
			bset PTH,#$01\
			Time Delay (10 nanoseconds or so, really small. Don't need delay in simulation)\
			bclr	PTH,#$01\
			\
	- OutCsr (sending commands)\
		- sends 8 bit command\
		- OutCsr $35\
			OutCsrNibble($03)\
			OutCsrNibble($05)\
		- * RS bit low the whole time! *\
		- Data equivalent for OutCsr is OutChar\
	- OutChar($45)\
		bset PTH,#$02 	; Sets RS bit to 1 to send data\
		OutCsrNibble($04)\
		OutCsrNibble($05)\
		bclr	PTH,#$02	; Clears RS bit\
		- OutChar is the same as OutCsr, only with RS bit set to 1 for data rather than 0 for command\
	- In simulation, don't need delay in between nibbles, maybe requires a very small one on real board\
	- In LCD_Open, more than 100 microseconds ok, 1 ms ok\
	- GoTo($40) Sets cursor to middle of LCD display for parallel row}